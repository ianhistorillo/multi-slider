{"version":3,"sources":["../src/MultiSlider.js"],"names":["step","min","max","x","Math","MultiSlider","state","down","concernedEvent","e","targetTouches","touchId","touches","changedTouches","i","length","identifier","onHandleStart","event","preventDefault","setState","xForEvent","controlled","onHandleMove","valuePos","reverseX","values","props","leftIndex","rightIndex","leftValue","rightValue","w","offsetLeft","left","round","right","concat","onChange","onHandleEnd","onHandleAbort","node","root","clientX","m","getScreenCTM","p","createSVGPoint","pageX","stopAt","document","body","parentElement","scrollLeft","matrixTransform","inverse","reduce","a","b","value","width","padX","sum","height","len","colors","trackSize","handleSize","handleStrokeSize","handleInnerDotSize","bg","centerY","touchEvents","tracks","handles","prev","prevColor","next","fromX","toX","color","push","handleEvents","onTouchStart","bind","onTouchMove","onTouchEnd","onTouchCancel","onMouseDown","reverseFromIndex","h1","slice","h2","reverse","events","onMouseMove","onMouseUp","onMouseLeave","Component","propTypes","arrayOf","string","number","func","defaultProps"],"mappings":"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","file":"MultiSlider.js","sourcesContent":["import React from \"react\";\nimport Handle from \"./Handle\";\nimport Track from \"./Track\";\nimport useTouches from \"./useTouches\";\nimport PropTypes from \"prop-types\";\n\nfunction step(min, max, x) {\n  return Math.max(0, Math.min((x - min) / (max - min), 1));\n}\n\nexport default class MultiSlider extends React.Component {\n  static propTypes = {\n    colors: PropTypes.arrayOf(PropTypes.string),\n    values: PropTypes.arrayOf(PropTypes.number),\n    onChange: PropTypes.func,\n    width: PropTypes.number,\n    height: PropTypes.number,\n    padX: PropTypes.number,\n    trackSize: PropTypes.number,\n    handleSize: PropTypes.number,\n    handleStrokeSize: PropTypes.number,\n    handleInnerDotSize: PropTypes.number,\n    bg: PropTypes.string,\n  };\n\n  static defaultProps = {\n    colors: [\"#000\"], // define your own colors instead.\n    handleSize: 16,\n    padX: 20, // MUST be > handleSize to avoid clip issues\n    width: 400,\n    height: 80,\n    trackSize: 6,\n    handleStrokeSize: 3,\n    handleInnerDotSize: 4,\n    bg: \"#fff\",\n  };\n\n  state = {\n    down: null,\n  };\n\n  xForEvent(e) {\n    var node = this.root;\n    var clientX = e.clientX;\n    var m = node.getScreenCTM();\n    var p = node.createSVGPoint();\n    if (useTouches()) {\n      // There is a bug in touch events and we need to compute the real clientX\n      // http://stackoverflow.com/questions/5885808/includes-touch-events-clientx-y-scrolling-or-not\n      clientX = e.pageX; // safer to start with pageX\n      var stopAt = document.body.parentElement;\n      while (node && node !== stopAt) {\n        clientX -= node.scrollLeft;\n        node = node.parentElement;\n      }\n    }\n    p.x = e.clientX;\n    p = p.matrixTransform(m.inverse());\n    return p.x;\n  }\n\n  sum() {\n    // (might optimize this computation on values change if costy)\n    return this.props.values.reduce(function(a, b) {\n      return a + b;\n    });\n  }\n\n  // map a value to an x position\n  x(value) {\n    var props = this.props;\n    var width = props.width;\n    var padX = props.padX;\n    var sum = this.sum();\n    return Math.round(padX + value * (width - 2 * padX) / sum);\n  }\n\n  reverseX(x) {\n    var props = this.props;\n    var width = props.width;\n    var padX = props.padX;\n    var sum = this.sum();\n    return sum * ((x - padX) / (width - 2 * padX));\n  }\n\n  concernedEvent = e => {\n    var down = this.state.down;\n    if (!useTouches()) {\n      return e;\n    } else {\n      if (!down) return e.targetTouches[0];\n      var touchId = down.touchId;\n      var touches = e.changedTouches;\n      for (var i = 0; i < touches.length; ++i) {\n        if (touches[i].identifier === touchId) return touches[i];\n      }\n      return null;\n    }\n  };\n\n  onHandleStart = (i, e) => {\n    var event = this.concernedEvent(e);\n    if (!event) return;\n    e.preventDefault();\n    this.setState({\n      down: {\n        touchId: event.identifier,\n        x: this.xForEvent(event),\n        controlled: i,\n      },\n    });\n  };\n  onHandleMove = e => {\n    var event = this.concernedEvent(e);\n    if (!event) return;\n    e.preventDefault();\n    var x = this.xForEvent(event);\n    var valuePos = this.reverseX(x);\n    var down = this.state.down;\n    var values = this.props.values;\n    var leftIndex = down.controlled - 1;\n    var rightIndex = down.controlled;\n    var leftValue = values[leftIndex];\n    var rightValue = values[rightIndex];\n    var w = leftValue + rightValue;\n    var offsetLeft = 0;\n    for (var i = 0; i < leftIndex; ++i)\n      offsetLeft += values[i];\n    var left = Math.round(w * step(offsetLeft, offsetLeft + w, valuePos));\n    var right = w - left;\n\n    if (left !== leftValue && right !== rightValue) {\n      values = [].concat(values);\n      values[leftIndex] = left;\n      values[rightIndex] = right;\n      this.props.onChange(values);\n    }\n  };\n  onHandleEnd = e => {\n    var event = this.concernedEvent(e);\n    if (!event) return;\n    this.setState({\n      down: null,\n    });\n  };\n  onHandleAbort = e => {\n    var event = this.concernedEvent(e);\n    if (!event) return;\n    this.setState({\n      down: null,\n    });\n  };\n\n  render() {\n    var state = this.state;\n    var down = state.down;\n    var props = this.props;\n    var width = props.width;\n    var height = props.height;\n    var values = props.values;\n    var len = values.length;\n    var colors = props.colors;\n    var trackSize = props.trackSize;\n    var handleSize = props.handleSize;\n    var handleStrokeSize = props.handleStrokeSize;\n    var handleInnerDotSize = props.handleInnerDotSize;\n    var bg = props.bg;\n    var centerY = height / 2;\n    var touchEvents = useTouches();\n\n    var tracks = [];\n    var handles = [];\n    var prev = 0;\n    var prevColor = bg;\n    for (var i = 0; i < len; ++i) {\n      var value = values[i];\n      var next = prev + value;\n      var fromX = this.x(prev);\n      var toX = this.x(next);\n      var color = colors[i % colors.length];\n      tracks.push(\n        <Track\n          key={i}\n          color={color}\n          y={centerY}\n          lineWidth={trackSize}\n          fromX={fromX}\n          toX={toX}\n        />\n      );\n      if (i !== 0) {\n        var handleEvents = {};\n        if (touchEvents) {\n          if (!down) {\n            handleEvents.onTouchStart = this.onHandleStart.bind(null, i);\n          } else if (down.controlled === i) {\n            handleEvents.onTouchMove = this.onHandleMove;\n            handleEvents.onTouchEnd = this.onHandleEnd;\n            handleEvents.onTouchCancel = this.onHandleAbort;\n          }\n        } else {\n          handleEvents.onMouseDown = this.onHandleStart.bind(null, i);\n        }\n        handles.push(\n          <Handle\n            key={i}\n            active={down && down.controlled === i}\n            x={fromX}\n            y={centerY}\n            bg={bg}\n            color={prevColor}\n            strokeWidth={handleStrokeSize}\n            innerRadius={handleInnerDotSize}\n            size={handleSize}\n            events={handleEvents}\n          />\n        );\n      }\n      prev = next;\n      prevColor = color;\n    }\n    // Specific case to avoid blocking the slider.\n    if (len >= 3 && values[len - 2] === 0 && values[len - 1] === 0) {\n      var reverseFromIndex;\n      for (\n        reverseFromIndex = len - 1;\n        values[reverseFromIndex] === 0 && reverseFromIndex > 0;\n        reverseFromIndex--\n      );\n      var h1 = handles.slice(0, reverseFromIndex);\n      var h2 = handles.slice(reverseFromIndex);\n      h2.reverse();\n      handles = h1.concat(h2);\n    }\n    var events = {};\n    if (!touchEvents && down) {\n      events.onMouseMove = this.onHandleMove;\n      events.onMouseUp = this.onHandleEnd;\n      events.onMouseLeave = this.onHandleAbort;\n    }\n    return (\n      <svg\n        ref={(node) => { this.root = node; }}\n        {...events}\n        width=\"100%\"\n        height=\"100%\"\n        viewBox={\"0 0 \" + width + \" \" + height}\n      >\n        {tracks}\n        {handles}\n      </svg>\n    );\n  }\n}\n"]}